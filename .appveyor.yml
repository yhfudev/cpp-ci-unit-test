environment:
  CYG_MIRROR: http://cygwin.mirror.constant.com
  CYG_PACKAGES: make,gcc-core
  DOCUMENT_FOLDER: /usr/local/share/doc/romancal
  matrix:
    - CYG_ROOT: C:\cygwin64
      CYG_CACHE: C:\cygwin64\var\cache\setup
      CYG_SETUP: setup-x86_64.exe
      BASH: C:\cygwin64\bin\bash
      CC: gcc
    - CYG_ROOT: C:\cygwin
      CYG_CACHE: C:\cygwin\var\cache\setup
      CYG_SETUP: setup-x86.exe
      BASH: C:\cygwin\bin\bash
      CC: gcc
    - MSYSTEM: MINGW64
      MSYS_CACHE: C:\msys64\var\cache\pacman\pkg
      KERNEL_CACHE: C:\msys64\usr\local\bin\OpenCL\
      BASH: C:\msys64\usr\bin\bash
      CC: gcc
    - MSYSTEM: MINGW32
      MSYS_CACHE: C:\msys64\var\cache\pacman\pkg
      KERNEL_CACHE: C:\msys64\usr\local\bin\OpenCL\
      BASH: C:\msys64\usr\bin\bash
      CC: gcc

# if we have too many commits at the same time, we might need to download more than just the last commit for appveyor to succeed
# otherwise we get the error: "fatal: reference is not a tree <commit>"
clone_depth: 15

init:
  # Don't try to convert line endings to Win32 CRLF
  - git config --global core.autocrlf input

install:
  - ps: if (Test-Path Env:\CYG_ROOT) { Start-FileDownload "http://cygwin.com/$env:CYG_SETUP" -FileName "$env:CYG_SETUP" }
  - if defined CYG_ROOT (%CYG_SETUP% --quiet-mode --no-shortcuts --only-site --root "%CYG_ROOT%" --site "%CYG_MIRROR%" --local-package-dir "%CYG_CACHE%" --packages "%CYG_PACKAGES%" --upgrade-also)
  - if defined MSYSTEM (%BASH% -lc "pacman -Suuy --noconfirm")
  # the following line is not a duplicate line:
  # it is necessary to upgrade the MSYS base files and after that all the packages
  # the 2 separate commands/lines are required because a new shell is necessary for each step
  - if defined MSYSTEM (%BASH% -lc "pacman -Suuy --noconfirm")
  #

build_script:
  - if defined BASH (%BASH% -lc "cd $(cygpath ${APPVEYOR_BUILD_FOLDER}) && git submodule update --init && ./autogen.sh && ./configure --enable-static --disable-shared CPPFLAGS=-I$(cygpath ${APPVEYOR_BUILD_FOLDER}) && make DOCUMENT_FOLDER=$(cygpath %DOCUMENT_FOLDER%) install && examples/ciutexcpp - && examples/ciutexc - && make check")

test_script:
  # some argument parse tests
  #  1. non-supported operator and therefore the test exec should complain (if it does not there might be a problem)
  #  2. normal arguments and succeed
  - ps: >-
      if (Test-Path Env:\MSYSTEM)
      {
        mkdir $env:KERNEL_CACHE 2>&1 | out-null
      }

      & $env:BASH -lc "ciutexc -a 2>&1" 2>&1 | out-null

      if ($LastExitCode -eq 0)
      {
        throw "test failed. exit code 1: $LastExitCode"
      }

      & $env:BASH -lc "ciutexc -x test.xml 2>&1" 2>&1 | out-null

      if ($LastExitCode -ne 0)
      {
        throw "test failed. exit code 2: $LastExitCode"
      }
